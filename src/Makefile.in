# Makefile.in generated by automake 1.16.3 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2020 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@



VPATH = @srcdir@
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
@HAVE_VFST_TRUE@am__append_1 = $(VFST_CPP_FILES)
@HAVE_VFST_FALSE@am__append_2 = $(VFST_CPP_FILES)
@HAVE_HFST_TRUE@am__append_3 = $(HFST_CPP_FILES)
@HAVE_HFST_TRUE@am__append_4 = $(HFSTOSPELL_LIBS)
@HAVE_HFST_FALSE@am__append_5 = $(HFST_CPP_FILES)
@HAVE_LTTOOLBOX_TRUE@am__append_6 = $(LTTOOLBOX_CPP_FILES)
@HAVE_LTTOOLBOX_TRUE@am__append_7 = $(LTTOOLBOX_LIBS)
@HAVE_LTTOOLBOX_FALSE@am__append_8 = $(LTTOOLBOX_CPP_FILES)
@HAVE_VISLCG3_TRUE@am__append_9 = $(VISLCG3_CPP_FILES)
@HAVE_VISLCG3_TRUE@am__append_10 = $(VISLCG3_LIBS) -ltinyxml2
@HAVE_VISLCG3_FALSE@am__append_11 = $(VISLCG3_CPP_FILES)
subdir = src
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ax_cxx_compile_stdcxx.m4 \
	$(top_srcdir)/m4/ax_pthread.m4 $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(noinst_HEADERS) \
	$(pkginclude_HEADERS) $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES = libvoikko.pc
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(pkgconfigdir)" \
	"$(DESTDIR)$(pkgincludedir)"
LTLIBRARIES = $(lib_LTLIBRARIES)
libvoikko_la_LIBADD =
am__libvoikko_la_SOURCES_DIST = fst/Configuration.cpp \
	fst/WeightedConfiguration.cpp fst/Transducer.cpp \
	fst/UnweightedTransducer.cpp fst/WeightedTransducer.cpp \
	spellchecker/spell.cpp spellchecker/suggestions.cpp \
	spellchecker/Speller.cpp spellchecker/SpellWithPriority.cpp \
	spellchecker/SpellUtils.cpp \
	spellchecker/AnalyzerToSpellerAdapter.cpp \
	spellchecker/FinnishSpellerTweaksWrapper.cpp \
	spellchecker/FixedResultSpeller.cpp \
	spellchecker/SpellerFactory.cpp spellchecker/SpellerCache.cpp \
	spellchecker/suggestion/Suggestion.cpp \
	spellchecker/suggestion/SuggestionStatus.cpp \
	spellchecker/suggestion/SuggestionGeneratorFactory.cpp \
	spellchecker/suggestion/SuggestionGeneratorCaseChange.cpp \
	spellchecker/suggestion/SuggestionGeneratorDeletion.cpp \
	spellchecker/suggestion/SuggestionGeneratorDeleteTwo.cpp \
	spellchecker/suggestion/SuggestionGeneratorInsertion.cpp \
	spellchecker/suggestion/SuggestionGeneratorInsertSpecial.cpp \
	spellchecker/suggestion/SuggestionGeneratorMultiReplacement.cpp \
	spellchecker/suggestion/SuggestionGeneratorNull.cpp \
	spellchecker/suggestion/SuggestionGeneratorReplacement.cpp \
	spellchecker/suggestion/SuggestionGeneratorReplaceTwo.cpp \
	spellchecker/suggestion/SuggestionGeneratorSoftHyphens.cpp \
	spellchecker/suggestion/SuggestionGeneratorSplitWord.cpp \
	spellchecker/suggestion/SuggestionGeneratorSwap.cpp \
	spellchecker/suggestion/SuggestionGeneratorVowelChange.cpp \
	spellchecker/suggestion/SuggestionStrategy.cpp \
	spellchecker/suggestion/SuggestionStrategyOcr.cpp \
	spellchecker/suggestion/SuggestionStrategyTyping.cpp \
	utils/utils.cpp utils/StringUtils.cpp morphology/interface.cpp \
	morphology/Analysis.cpp morphology/Analyzer.cpp \
	morphology/AnalyzerFactory.cpp morphology/NullAnalyzer.cpp \
	setup/setup.cpp setup/Dictionary.cpp \
	setup/BackendProperties.cpp setup/DictionaryFactory.cpp \
	setup/DictionaryLoader.cpp setup/DictionaryException.cpp \
	setup/interface.cpp setup/LanguageTag.cpp \
	hyphenator/interface.cpp \
	hyphenator/AnalyzerToFinnishHyphenatorAdapter.cpp \
	hyphenator/Hyphenator.cpp hyphenator/HyphenatorFactory.cpp \
	character/charset.cpp character/SimpleChar.cpp \
	tokenizer/interface.cpp tokenizer/Tokenizer.cpp \
	sentence/interface.cpp sentence/Sentence.cpp \
	grammar/interface.cpp grammar/FinnishRuleEngine/checks.cpp \
	grammar/error.cpp grammar/Analysis.cpp grammar/Sentence.cpp \
	grammar/Paragraph.cpp grammar/CacheEntry.cpp \
	grammar/GcCache.cpp grammar/VoikkoGrammarError.cpp \
	grammar/NullGrammarChecker.cpp \
	grammar/FinnishGrammarChecker.cpp grammar/GrammarChecker.cpp \
	grammar/GrammarCheckerFactory.cpp grammar/FinnishAnalysis.cpp \
	grammar/HfstAnalysis.cpp grammar/FinnishRuleEngine.cpp \
	grammar/RuleEngine.cpp \
	grammar/FinnishRuleEngine/CapitalizationCheck.cpp \
	grammar/FinnishRuleEngine/CompoundVerbCheck.cpp \
	grammar/FinnishRuleEngine/MissingVerbCheck.cpp \
	grammar/FinnishRuleEngine/NegativeVerbCheck.cpp \
	grammar/FinnishRuleEngine/ParagraphCheck.cpp \
	grammar/FinnishRuleEngine/SentenceCheck.cpp \
	grammar/FinnishRuleEngine/SidesanaCheck.cpp \
	grammar/FinnishRuleEngine/RelativePronounCheck.cpp \
	compatibility/interface.cpp morphology/VfstAnalyzer.cpp \
	morphology/FinnishVfstAnalyzer.cpp \
	spellchecker/VfstSpeller.cpp spellchecker/VfstSuggestion.cpp \
	setup/V5DictionaryLoader.cpp \
	grammar/FinnishRuleEngine/VfstAutocorrectCheck.cpp \
	morphology/HfstAnalyzer.cpp spellchecker/HfstSpeller.cpp \
	spellchecker/HfstSuggestion.cpp hyphenator/HfstHyphenator.cpp \
	setup/V3DictionaryLoader.cpp morphology/LttoolboxAnalyzer.cpp \
	grammar/CgRuleEngine.cpp setup/V4DictionaryLoader.cpp \
	grammar/CgGrammarChecker.cpp
am__dirstamp = $(am__leading_dot)dirstamp
am__objects_1 = morphology/VfstAnalyzer.lo \
	morphology/FinnishVfstAnalyzer.lo spellchecker/VfstSpeller.lo \
	spellchecker/VfstSuggestion.lo setup/V5DictionaryLoader.lo \
	grammar/FinnishRuleEngine/VfstAutocorrectCheck.lo
@HAVE_VFST_TRUE@am__objects_2 = $(am__objects_1)
am__objects_3 = morphology/HfstAnalyzer.lo spellchecker/HfstSpeller.lo \
	spellchecker/HfstSuggestion.lo hyphenator/HfstHyphenator.lo \
	setup/V3DictionaryLoader.lo
@HAVE_HFST_TRUE@am__objects_4 = $(am__objects_3)
am__objects_5 = morphology/LttoolboxAnalyzer.lo
@HAVE_LTTOOLBOX_TRUE@am__objects_6 = $(am__objects_5)
am__objects_7 = grammar/CgRuleEngine.lo setup/V4DictionaryLoader.lo \
	grammar/CgGrammarChecker.lo
@HAVE_VISLCG3_TRUE@am__objects_8 = $(am__objects_7)
am_libvoikko_la_OBJECTS = fst/Configuration.lo \
	fst/WeightedConfiguration.lo fst/Transducer.lo \
	fst/UnweightedTransducer.lo fst/WeightedTransducer.lo \
	spellchecker/spell.lo spellchecker/suggestions.lo \
	spellchecker/Speller.lo spellchecker/SpellWithPriority.lo \
	spellchecker/SpellUtils.lo \
	spellchecker/AnalyzerToSpellerAdapter.lo \
	spellchecker/FinnishSpellerTweaksWrapper.lo \
	spellchecker/FixedResultSpeller.lo \
	spellchecker/SpellerFactory.lo spellchecker/SpellerCache.lo \
	spellchecker/suggestion/Suggestion.lo \
	spellchecker/suggestion/SuggestionStatus.lo \
	spellchecker/suggestion/SuggestionGeneratorFactory.lo \
	spellchecker/suggestion/SuggestionGeneratorCaseChange.lo \
	spellchecker/suggestion/SuggestionGeneratorDeletion.lo \
	spellchecker/suggestion/SuggestionGeneratorDeleteTwo.lo \
	spellchecker/suggestion/SuggestionGeneratorInsertion.lo \
	spellchecker/suggestion/SuggestionGeneratorInsertSpecial.lo \
	spellchecker/suggestion/SuggestionGeneratorMultiReplacement.lo \
	spellchecker/suggestion/SuggestionGeneratorNull.lo \
	spellchecker/suggestion/SuggestionGeneratorReplacement.lo \
	spellchecker/suggestion/SuggestionGeneratorReplaceTwo.lo \
	spellchecker/suggestion/SuggestionGeneratorSoftHyphens.lo \
	spellchecker/suggestion/SuggestionGeneratorSplitWord.lo \
	spellchecker/suggestion/SuggestionGeneratorSwap.lo \
	spellchecker/suggestion/SuggestionGeneratorVowelChange.lo \
	spellchecker/suggestion/SuggestionStrategy.lo \
	spellchecker/suggestion/SuggestionStrategyOcr.lo \
	spellchecker/suggestion/SuggestionStrategyTyping.lo \
	utils/utils.lo utils/StringUtils.lo morphology/interface.lo \
	morphology/Analysis.lo morphology/Analyzer.lo \
	morphology/AnalyzerFactory.lo morphology/NullAnalyzer.lo \
	setup/setup.lo setup/Dictionary.lo setup/BackendProperties.lo \
	setup/DictionaryFactory.lo setup/DictionaryLoader.lo \
	setup/DictionaryException.lo setup/interface.lo \
	setup/LanguageTag.lo hyphenator/interface.lo \
	hyphenator/AnalyzerToFinnishHyphenatorAdapter.lo \
	hyphenator/Hyphenator.lo hyphenator/HyphenatorFactory.lo \
	character/charset.lo character/SimpleChar.lo \
	tokenizer/interface.lo tokenizer/Tokenizer.lo \
	sentence/interface.lo sentence/Sentence.lo \
	grammar/interface.lo grammar/FinnishRuleEngine/checks.lo \
	grammar/error.lo grammar/Analysis.lo grammar/Sentence.lo \
	grammar/Paragraph.lo grammar/CacheEntry.lo grammar/GcCache.lo \
	grammar/VoikkoGrammarError.lo grammar/NullGrammarChecker.lo \
	grammar/FinnishGrammarChecker.lo grammar/GrammarChecker.lo \
	grammar/GrammarCheckerFactory.lo grammar/FinnishAnalysis.lo \
	grammar/HfstAnalysis.lo grammar/FinnishRuleEngine.lo \
	grammar/RuleEngine.lo \
	grammar/FinnishRuleEngine/CapitalizationCheck.lo \
	grammar/FinnishRuleEngine/CompoundVerbCheck.lo \
	grammar/FinnishRuleEngine/MissingVerbCheck.lo \
	grammar/FinnishRuleEngine/NegativeVerbCheck.lo \
	grammar/FinnishRuleEngine/ParagraphCheck.lo \
	grammar/FinnishRuleEngine/SentenceCheck.lo \
	grammar/FinnishRuleEngine/SidesanaCheck.lo \
	grammar/FinnishRuleEngine/RelativePronounCheck.lo \
	compatibility/interface.lo $(am__objects_2) $(am__objects_4) \
	$(am__objects_6) $(am__objects_8)
libvoikko_la_OBJECTS = $(am_libvoikko_la_OBJECTS)
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
libvoikko_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(libvoikko_la_LDFLAGS) $(LDFLAGS) -o $@
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__maybe_remake_depfiles = depfiles
am__depfiles_remade = character/$(DEPDIR)/SimpleChar.Plo \
	character/$(DEPDIR)/charset.Plo \
	compatibility/$(DEPDIR)/interface.Plo \
	fst/$(DEPDIR)/Configuration.Plo fst/$(DEPDIR)/Transducer.Plo \
	fst/$(DEPDIR)/UnweightedTransducer.Plo \
	fst/$(DEPDIR)/WeightedConfiguration.Plo \
	fst/$(DEPDIR)/WeightedTransducer.Plo \
	grammar/$(DEPDIR)/Analysis.Plo \
	grammar/$(DEPDIR)/CacheEntry.Plo \
	grammar/$(DEPDIR)/CgGrammarChecker.Plo \
	grammar/$(DEPDIR)/CgRuleEngine.Plo \
	grammar/$(DEPDIR)/FinnishAnalysis.Plo \
	grammar/$(DEPDIR)/FinnishGrammarChecker.Plo \
	grammar/$(DEPDIR)/FinnishRuleEngine.Plo \
	grammar/$(DEPDIR)/GcCache.Plo \
	grammar/$(DEPDIR)/GrammarChecker.Plo \
	grammar/$(DEPDIR)/GrammarCheckerFactory.Plo \
	grammar/$(DEPDIR)/HfstAnalysis.Plo \
	grammar/$(DEPDIR)/NullGrammarChecker.Plo \
	grammar/$(DEPDIR)/Paragraph.Plo \
	grammar/$(DEPDIR)/RuleEngine.Plo \
	grammar/$(DEPDIR)/Sentence.Plo \
	grammar/$(DEPDIR)/VoikkoGrammarError.Plo \
	grammar/$(DEPDIR)/error.Plo grammar/$(DEPDIR)/interface.Plo \
	grammar/FinnishRuleEngine/$(DEPDIR)/CapitalizationCheck.Plo \
	grammar/FinnishRuleEngine/$(DEPDIR)/CompoundVerbCheck.Plo \
	grammar/FinnishRuleEngine/$(DEPDIR)/MissingVerbCheck.Plo \
	grammar/FinnishRuleEngine/$(DEPDIR)/NegativeVerbCheck.Plo \
	grammar/FinnishRuleEngine/$(DEPDIR)/ParagraphCheck.Plo \
	grammar/FinnishRuleEngine/$(DEPDIR)/RelativePronounCheck.Plo \
	grammar/FinnishRuleEngine/$(DEPDIR)/SentenceCheck.Plo \
	grammar/FinnishRuleEngine/$(DEPDIR)/SidesanaCheck.Plo \
	grammar/FinnishRuleEngine/$(DEPDIR)/VfstAutocorrectCheck.Plo \
	grammar/FinnishRuleEngine/$(DEPDIR)/checks.Plo \
	hyphenator/$(DEPDIR)/AnalyzerToFinnishHyphenatorAdapter.Plo \
	hyphenator/$(DEPDIR)/HfstHyphenator.Plo \
	hyphenator/$(DEPDIR)/Hyphenator.Plo \
	hyphenator/$(DEPDIR)/HyphenatorFactory.Plo \
	hyphenator/$(DEPDIR)/interface.Plo \
	morphology/$(DEPDIR)/Analysis.Plo \
	morphology/$(DEPDIR)/Analyzer.Plo \
	morphology/$(DEPDIR)/AnalyzerFactory.Plo \
	morphology/$(DEPDIR)/FinnishVfstAnalyzer.Plo \
	morphology/$(DEPDIR)/HfstAnalyzer.Plo \
	morphology/$(DEPDIR)/LttoolboxAnalyzer.Plo \
	morphology/$(DEPDIR)/NullAnalyzer.Plo \
	morphology/$(DEPDIR)/VfstAnalyzer.Plo \
	morphology/$(DEPDIR)/interface.Plo \
	sentence/$(DEPDIR)/Sentence.Plo \
	sentence/$(DEPDIR)/interface.Plo \
	setup/$(DEPDIR)/BackendProperties.Plo \
	setup/$(DEPDIR)/Dictionary.Plo \
	setup/$(DEPDIR)/DictionaryException.Plo \
	setup/$(DEPDIR)/DictionaryFactory.Plo \
	setup/$(DEPDIR)/DictionaryLoader.Plo \
	setup/$(DEPDIR)/LanguageTag.Plo \
	setup/$(DEPDIR)/V3DictionaryLoader.Plo \
	setup/$(DEPDIR)/V4DictionaryLoader.Plo \
	setup/$(DEPDIR)/V5DictionaryLoader.Plo \
	setup/$(DEPDIR)/interface.Plo setup/$(DEPDIR)/setup.Plo \
	spellchecker/$(DEPDIR)/AnalyzerToSpellerAdapter.Plo \
	spellchecker/$(DEPDIR)/FinnishSpellerTweaksWrapper.Plo \
	spellchecker/$(DEPDIR)/FixedResultSpeller.Plo \
	spellchecker/$(DEPDIR)/HfstSpeller.Plo \
	spellchecker/$(DEPDIR)/HfstSuggestion.Plo \
	spellchecker/$(DEPDIR)/SpellUtils.Plo \
	spellchecker/$(DEPDIR)/SpellWithPriority.Plo \
	spellchecker/$(DEPDIR)/Speller.Plo \
	spellchecker/$(DEPDIR)/SpellerCache.Plo \
	spellchecker/$(DEPDIR)/SpellerFactory.Plo \
	spellchecker/$(DEPDIR)/VfstSpeller.Plo \
	spellchecker/$(DEPDIR)/VfstSuggestion.Plo \
	spellchecker/$(DEPDIR)/spell.Plo \
	spellchecker/$(DEPDIR)/suggestions.Plo \
	spellchecker/suggestion/$(DEPDIR)/Suggestion.Plo \
	spellchecker/suggestion/$(DEPDIR)/SuggestionGeneratorCaseChange.Plo \
	spellchecker/suggestion/$(DEPDIR)/SuggestionGeneratorDeleteTwo.Plo \
	spellchecker/suggestion/$(DEPDIR)/SuggestionGeneratorDeletion.Plo \
	spellchecker/suggestion/$(DEPDIR)/SuggestionGeneratorFactory.Plo \
	spellchecker/suggestion/$(DEPDIR)/SuggestionGeneratorInsertSpecial.Plo \
	spellchecker/suggestion/$(DEPDIR)/SuggestionGeneratorInsertion.Plo \
	spellchecker/suggestion/$(DEPDIR)/SuggestionGeneratorMultiReplacement.Plo \
	spellchecker/suggestion/$(DEPDIR)/SuggestionGeneratorNull.Plo \
	spellchecker/suggestion/$(DEPDIR)/SuggestionGeneratorReplaceTwo.Plo \
	spellchecker/suggestion/$(DEPDIR)/SuggestionGeneratorReplacement.Plo \
	spellchecker/suggestion/$(DEPDIR)/SuggestionGeneratorSoftHyphens.Plo \
	spellchecker/suggestion/$(DEPDIR)/SuggestionGeneratorSplitWord.Plo \
	spellchecker/suggestion/$(DEPDIR)/SuggestionGeneratorSwap.Plo \
	spellchecker/suggestion/$(DEPDIR)/SuggestionGeneratorVowelChange.Plo \
	spellchecker/suggestion/$(DEPDIR)/SuggestionStatus.Plo \
	spellchecker/suggestion/$(DEPDIR)/SuggestionStrategy.Plo \
	spellchecker/suggestion/$(DEPDIR)/SuggestionStrategyOcr.Plo \
	spellchecker/suggestion/$(DEPDIR)/SuggestionStrategyTyping.Plo \
	tokenizer/$(DEPDIR)/Tokenizer.Plo \
	tokenizer/$(DEPDIR)/interface.Plo \
	utils/$(DEPDIR)/StringUtils.Plo utils/$(DEPDIR)/utils.Plo
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_@AM_V@)
am__v_CXX_ = $(am__v_CXX_@AM_DEFAULT_V@)
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_@AM_V@)
am__v_CXXLD_ = $(am__v_CXXLD_@AM_DEFAULT_V@)
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = $(libvoikko_la_SOURCES)
DIST_SOURCES = $(am__libvoikko_la_SOURCES_DIST)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
DATA = $(pkgconfig_DATA)
HEADERS = $(noinst_HEADERS) $(pkginclude_HEADERS)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/libvoikko.pc.in \
	$(top_srcdir)/depcomp
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
AS = @AS@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DICTIONARY_PATH = @DICTIONARY_PATH@
DLLTOOL = @DLLTOOL@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GREP = @GREP@
HAVE_CXX11 = @HAVE_CXX11@
HFSTOSPELL_CFLAGS = @HFSTOSPELL_CFLAGS@
HFSTOSPELL_LIBS = @HFSTOSPELL_LIBS@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBLDFLAGSWIN = @LIBLDFLAGSWIN@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
LTTOOLBOX_CFLAGS = @LTTOOLBOX_CFLAGS@
LTTOOLBOX_LIBS = @LTTOOLBOX_LIBS@
LT_SYS_LIBRARY_PATH = @LT_SYS_LIBRARY_PATH@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PKG_CONFIG = @PKG_CONFIG@
PKG_CONFIG_LIBDIR = @PKG_CONFIG_LIBDIR@
PKG_CONFIG_PATH = @PKG_CONFIG_PATH@
PTHREAD_CC = @PTHREAD_CC@
PTHREAD_CFLAGS = @PTHREAD_CFLAGS@
PTHREAD_LIBS = @PTHREAD_LIBS@
PYTHON = @PYTHON@
PYTHON_EXEC_PREFIX = @PYTHON_EXEC_PREFIX@
PYTHON_PLATFORM = @PYTHON_PLATFORM@
PYTHON_PREFIX = @PYTHON_PREFIX@
PYTHON_VERSION = @PYTHON_VERSION@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
VISLCG3_CFLAGS = @VISLCG3_CFLAGS@
VISLCG3_LIBS = @VISLCG3_LIBS@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
ax_pthread_config = @ax_pthread_config@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
pkgpyexecdir = @pkgpyexecdir@
pkgpythondir = @pkgpythondir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
pyexecdir = @pyexecdir@
pythondir = @pythondir@
runstatedir = @runstatedir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
AUTOMAKE_OPTIONS = subdir-objects
lib_LTLIBRARIES = libvoikko.la
libvoikko_la_SOURCES = fst/Configuration.cpp \
	fst/WeightedConfiguration.cpp fst/Transducer.cpp \
	fst/UnweightedTransducer.cpp fst/WeightedTransducer.cpp \
	spellchecker/spell.cpp spellchecker/suggestions.cpp \
	spellchecker/Speller.cpp spellchecker/SpellWithPriority.cpp \
	spellchecker/SpellUtils.cpp \
	spellchecker/AnalyzerToSpellerAdapter.cpp \
	spellchecker/FinnishSpellerTweaksWrapper.cpp \
	spellchecker/FixedResultSpeller.cpp \
	spellchecker/SpellerFactory.cpp spellchecker/SpellerCache.cpp \
	spellchecker/suggestion/Suggestion.cpp \
	spellchecker/suggestion/SuggestionStatus.cpp \
	spellchecker/suggestion/SuggestionGeneratorFactory.cpp \
	spellchecker/suggestion/SuggestionGeneratorCaseChange.cpp \
	spellchecker/suggestion/SuggestionGeneratorDeletion.cpp \
	spellchecker/suggestion/SuggestionGeneratorDeleteTwo.cpp \
	spellchecker/suggestion/SuggestionGeneratorInsertion.cpp \
	spellchecker/suggestion/SuggestionGeneratorInsertSpecial.cpp \
	spellchecker/suggestion/SuggestionGeneratorMultiReplacement.cpp \
	spellchecker/suggestion/SuggestionGeneratorNull.cpp \
	spellchecker/suggestion/SuggestionGeneratorReplacement.cpp \
	spellchecker/suggestion/SuggestionGeneratorReplaceTwo.cpp \
	spellchecker/suggestion/SuggestionGeneratorSoftHyphens.cpp \
	spellchecker/suggestion/SuggestionGeneratorSplitWord.cpp \
	spellchecker/suggestion/SuggestionGeneratorSwap.cpp \
	spellchecker/suggestion/SuggestionGeneratorVowelChange.cpp \
	spellchecker/suggestion/SuggestionStrategy.cpp \
	spellchecker/suggestion/SuggestionStrategyOcr.cpp \
	spellchecker/suggestion/SuggestionStrategyTyping.cpp \
	utils/utils.cpp utils/StringUtils.cpp morphology/interface.cpp \
	morphology/Analysis.cpp morphology/Analyzer.cpp \
	morphology/AnalyzerFactory.cpp morphology/NullAnalyzer.cpp \
	setup/setup.cpp setup/Dictionary.cpp \
	setup/BackendProperties.cpp setup/DictionaryFactory.cpp \
	setup/DictionaryLoader.cpp setup/DictionaryException.cpp \
	setup/interface.cpp setup/LanguageTag.cpp \
	hyphenator/interface.cpp \
	hyphenator/AnalyzerToFinnishHyphenatorAdapter.cpp \
	hyphenator/Hyphenator.cpp hyphenator/HyphenatorFactory.cpp \
	character/charset.cpp character/SimpleChar.cpp \
	tokenizer/interface.cpp tokenizer/Tokenizer.cpp \
	sentence/interface.cpp sentence/Sentence.cpp \
	grammar/interface.cpp grammar/FinnishRuleEngine/checks.cpp \
	grammar/error.cpp grammar/Analysis.cpp grammar/Sentence.cpp \
	grammar/Paragraph.cpp grammar/CacheEntry.cpp \
	grammar/GcCache.cpp grammar/VoikkoGrammarError.cpp \
	grammar/NullGrammarChecker.cpp \
	grammar/FinnishGrammarChecker.cpp grammar/GrammarChecker.cpp \
	grammar/GrammarCheckerFactory.cpp grammar/FinnishAnalysis.cpp \
	grammar/HfstAnalysis.cpp grammar/FinnishRuleEngine.cpp \
	grammar/RuleEngine.cpp \
	grammar/FinnishRuleEngine/CapitalizationCheck.cpp \
	grammar/FinnishRuleEngine/CompoundVerbCheck.cpp \
	grammar/FinnishRuleEngine/MissingVerbCheck.cpp \
	grammar/FinnishRuleEngine/NegativeVerbCheck.cpp \
	grammar/FinnishRuleEngine/ParagraphCheck.cpp \
	grammar/FinnishRuleEngine/SentenceCheck.cpp \
	grammar/FinnishRuleEngine/SidesanaCheck.cpp \
	grammar/FinnishRuleEngine/RelativePronounCheck.cpp \
	compatibility/interface.cpp $(am__append_1) $(am__append_3) \
	$(am__append_6) $(am__append_9)
libvoikko_la_LDFLAGS = -no-undefined -version-info 17:1:16 \
	@LIBLDFLAGSWIN@ $(am__append_4) $(am__append_7) \
	$(am__append_10)
pkginclude_HEADERS = voikko.h voikko_enums.h voikko_defines.h voikko_deprecated.h voikko_structs.h
noinst_HEADERS = \
    fst/Configuration.hpp \
    fst/WeightedConfiguration.hpp \
    fst/Transducer.hpp \
    fst/Transition.hpp \
    fst/WeightedTransition.hpp \
    fst/UnweightedTransducer.hpp \
    fst/WeightedTransducer.hpp \
    utils/utils.hpp utils/StringUtils.hpp \
    hyphenator/Hyphenator.hpp \
    hyphenator/AnalyzerToFinnishHyphenatorAdapter.hpp \
    hyphenator/HyphenatorFactory.hpp \
    hyphenator/HfstHyphenator.hpp \
    morphology/Analysis.hpp \
    morphology/Analyzer.hpp \
    morphology/AnalyzerFactory.hpp \
    morphology/HfstAnalyzer.hpp \
    morphology/VfstAnalyzer.hpp \
    morphology/FinnishVfstAnalyzer.hpp \
    morphology/LttoolboxAnalyzer.hpp \
    morphology/NullAnalyzer.hpp \
    setup/setup.hpp setup/Dictionary.hpp \
    setup/BackendProperties.hpp \
    setup/DictionaryFactory.hpp \
    setup/DictionaryLoader.hpp \
    setup/V3DictionaryLoader.hpp \
    setup/V4DictionaryLoader.hpp \
    setup/V5DictionaryLoader.hpp \
    setup/DictionaryException.hpp \
    setup/LanguageTag.hpp \
    character/charset.hpp \
    character/SimpleChar.hpp \
    porting.h \
    spellchecker/SpellWithPriority.hpp \
    spellchecker/SpellUtils.hpp \
    spellchecker/Speller.hpp \
    spellchecker/AnalyzerToSpellerAdapter.hpp \
    spellchecker/FinnishSpellerTweaksWrapper.hpp \
    spellchecker/FixedResultSpeller.hpp \
    spellchecker/HfstSpeller.hpp \
    spellchecker/SpellerFactory.hpp \
    spellchecker/SpellerCache.hpp \
    spellchecker/HfstSuggestion.hpp \
    spellchecker/VfstSpeller.hpp \
    spellchecker/VfstSuggestion.hpp \
    spellchecker/suggestion/Suggestion.hpp \
    spellchecker/suggestion/SuggestionGenerator.hpp \
    spellchecker/suggestion/SuggestionGeneratorFactory.hpp \
    spellchecker/suggestion/SuggestionGeneratorCaseChange.hpp \
    spellchecker/suggestion/SuggestionGeneratorDeletion.hpp \
    spellchecker/suggestion/SuggestionGeneratorDeleteTwo.hpp \
    spellchecker/suggestion/SuggestionGeneratorInsertion.hpp \
    spellchecker/suggestion/SuggestionGeneratorInsertSpecial.hpp \
    spellchecker/suggestion/SuggestionGeneratorMultiReplacement.hpp \
    spellchecker/suggestion/SuggestionGeneratorNull.hpp \
    spellchecker/suggestion/SuggestionGeneratorReplacement.hpp \
    spellchecker/suggestion/SuggestionGeneratorReplaceTwo.hpp \
    spellchecker/suggestion/SuggestionGeneratorSoftHyphens.hpp \
    spellchecker/suggestion/SuggestionGeneratorSplitWord.hpp \
    spellchecker/suggestion/SuggestionGeneratorSwap.hpp \
    spellchecker/suggestion/SuggestionType.hpp \
    spellchecker/suggestion/SuggestionGeneratorVowelChange.hpp \
    spellchecker/suggestion/SuggestionStrategy.hpp \
    spellchecker/suggestion/SuggestionStrategyOcr.hpp \
    spellchecker/suggestion/SuggestionStrategyTyping.hpp \
    spellchecker/suggestion/SuggestionStatus.hpp \
    sentence/Sentence.hpp \
    tokenizer/Tokenizer.hpp \
    grammar/FinnishRuleEngine/checks.hpp grammar/error.hpp \
    grammar/Analysis.hpp \
    grammar/Token.hpp grammar/Sentence.hpp grammar/Paragraph.hpp \
    grammar/CacheEntry.hpp \
    grammar/GcCache.hpp \
    grammar/RuleEngine.hpp \
    grammar/NullGrammarChecker.hpp \
    grammar/FinnishGrammarChecker.hpp \
    grammar/GrammarChecker.hpp \
    grammar/GrammarCheckerFactory.hpp \
    grammar/VoikkoGrammarError.hpp \
    grammar/FinnishRuleEngine.hpp \
    grammar/FinnishAnalysis.hpp \
    grammar/HfstAnalysis.hpp \
    grammar/RuleEngine.hpp \
    grammar/FinnishRuleEngine/CapitalizationCheck.hpp \
    grammar/FinnishRuleEngine/CompoundVerbCheck.hpp \
    grammar/FinnishRuleEngine/MissingVerbCheck.hpp \
    grammar/FinnishRuleEngine/NegativeVerbCheck.hpp \
    grammar/FinnishRuleEngine/ParagraphCheck.hpp \
    grammar/FinnishRuleEngine/SentenceCheck.hpp \
    grammar/FinnishRuleEngine/SidesanaCheck.hpp \
    grammar/FinnishRuleEngine/RelativePronounCheck.hpp \
    grammar/FinnishRuleEngine/VfstAutocorrectCheck.hpp \
    utf8/core.hpp \
    utf8/checked.hpp \
    utf8/unchecked.hpp \
    utf8/utf8.hpp

EXTRA_DIST = $(am__append_2) $(am__append_5) $(am__append_8) \
	$(am__append_11)
HFST_CPP_FILES = morphology/HfstAnalyzer.cpp \
    spellchecker/HfstSpeller.cpp \
    spellchecker/HfstSuggestion.cpp \
    hyphenator/HfstHyphenator.cpp \
    setup/V3DictionaryLoader.cpp

VISLCG3_CPP_FILES = grammar/CgRuleEngine.cpp \
    setup/V4DictionaryLoader.cpp \
    grammar/CgGrammarChecker.cpp

LTTOOLBOX_CPP_FILES = morphology/LttoolboxAnalyzer.cpp
VFST_CPP_FILES = morphology/VfstAnalyzer.cpp morphology/FinnishVfstAnalyzer.cpp \
    spellchecker/VfstSpeller.cpp spellchecker/VfstSuggestion.cpp setup/V5DictionaryLoader.cpp \
    grammar/FinnishRuleEngine/VfstAutocorrectCheck.cpp

pkgconfigdir = $(libdir)/pkgconfig
pkgconfig_DATA = libvoikko.pc
all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
libvoikko.pc: $(top_builddir)/config.status $(srcdir)/libvoikko.pc.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@

install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}
fst/$(am__dirstamp):
	@$(MKDIR_P) fst
	@: > fst/$(am__dirstamp)
fst/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) fst/$(DEPDIR)
	@: > fst/$(DEPDIR)/$(am__dirstamp)
fst/Configuration.lo: fst/$(am__dirstamp) \
	fst/$(DEPDIR)/$(am__dirstamp)
fst/WeightedConfiguration.lo: fst/$(am__dirstamp) \
	fst/$(DEPDIR)/$(am__dirstamp)
fst/Transducer.lo: fst/$(am__dirstamp) fst/$(DEPDIR)/$(am__dirstamp)
fst/UnweightedTransducer.lo: fst/$(am__dirstamp) \
	fst/$(DEPDIR)/$(am__dirstamp)
fst/WeightedTransducer.lo: fst/$(am__dirstamp) \
	fst/$(DEPDIR)/$(am__dirstamp)
spellchecker/$(am__dirstamp):
	@$(MKDIR_P) spellchecker
	@: > spellchecker/$(am__dirstamp)
spellchecker/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) spellchecker/$(DEPDIR)
	@: > spellchecker/$(DEPDIR)/$(am__dirstamp)
spellchecker/spell.lo: spellchecker/$(am__dirstamp) \
	spellchecker/$(DEPDIR)/$(am__dirstamp)
spellchecker/suggestions.lo: spellchecker/$(am__dirstamp) \
	spellchecker/$(DEPDIR)/$(am__dirstamp)
spellchecker/Speller.lo: spellchecker/$(am__dirstamp) \
	spellchecker/$(DEPDIR)/$(am__dirstamp)
spellchecker/SpellWithPriority.lo: spellchecker/$(am__dirstamp) \
	spellchecker/$(DEPDIR)/$(am__dirstamp)
spellchecker/SpellUtils.lo: spellchecker/$(am__dirstamp) \
	spellchecker/$(DEPDIR)/$(am__dirstamp)
spellchecker/AnalyzerToSpellerAdapter.lo:  \
	spellchecker/$(am__dirstamp) \
	spellchecker/$(DEPDIR)/$(am__dirstamp)
spellchecker/FinnishSpellerTweaksWrapper.lo:  \
	spellchecker/$(am__dirstamp) \
	spellchecker/$(DEPDIR)/$(am__dirstamp)
spellchecker/FixedResultSpeller.lo: spellchecker/$(am__dirstamp) \
	spellchecker/$(DEPDIR)/$(am__dirstamp)
spellchecker/SpellerFactory.lo: spellchecker/$(am__dirstamp) \
	spellchecker/$(DEPDIR)/$(am__dirstamp)
spellchecker/SpellerCache.lo: spellchecker/$(am__dirstamp) \
	spellchecker/$(DEPDIR)/$(am__dirstamp)
spellchecker/suggestion/$(am__dirstamp):
	@$(MKDIR_P) spellchecker/suggestion
	@: > spellchecker/suggestion/$(am__dirstamp)
spellchecker/suggestion/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) spellchecker/suggestion/$(DEPDIR)
	@: > spellchecker/suggestion/$(DEPDIR)/$(am__dirstamp)
spellchecker/suggestion/Suggestion.lo:  \
	spellchecker/suggestion/$(am__dirstamp) \
	spellchecker/suggestion/$(DEPDIR)/$(am__dirstamp)
spellchecker/suggestion/SuggestionStatus.lo:  \
	spellchecker/suggestion/$(am__dirstamp) \
	spellchecker/suggestion/$(DEPDIR)/$(am__dirstamp)
spellchecker/suggestion/SuggestionGeneratorFactory.lo:  \
	spellchecker/suggestion/$(am__dirstamp) \
	spellchecker/suggestion/$(DEPDIR)/$(am__dirstamp)
spellchecker/suggestion/SuggestionGeneratorCaseChange.lo:  \
	spellchecker/suggestion/$(am__dirstamp) \
	spellchecker/suggestion/$(DEPDIR)/$(am__dirstamp)
spellchecker/suggestion/SuggestionGeneratorDeletion.lo:  \
	spellchecker/suggestion/$(am__dirstamp) \
	spellchecker/suggestion/$(DEPDIR)/$(am__dirstamp)
spellchecker/suggestion/SuggestionGeneratorDeleteTwo.lo:  \
	spellchecker/suggestion/$(am__dirstamp) \
	spellchecker/suggestion/$(DEPDIR)/$(am__dirstamp)
spellchecker/suggestion/SuggestionGeneratorInsertion.lo:  \
	spellchecker/suggestion/$(am__dirstamp) \
	spellchecker/suggestion/$(DEPDIR)/$(am__dirstamp)
spellchecker/suggestion/SuggestionGeneratorInsertSpecial.lo:  \
	spellchecker/suggestion/$(am__dirstamp) \
	spellchecker/suggestion/$(DEPDIR)/$(am__dirstamp)
spellchecker/suggestion/SuggestionGeneratorMultiReplacement.lo:  \
	spellchecker/suggestion/$(am__dirstamp) \
	spellchecker/suggestion/$(DEPDIR)/$(am__dirstamp)
spellchecker/suggestion/SuggestionGeneratorNull.lo:  \
	spellchecker/suggestion/$(am__dirstamp) \
	spellchecker/suggestion/$(DEPDIR)/$(am__dirstamp)
spellchecker/suggestion/SuggestionGeneratorReplacement.lo:  \
	spellchecker/suggestion/$(am__dirstamp) \
	spellchecker/suggestion/$(DEPDIR)/$(am__dirstamp)
spellchecker/suggestion/SuggestionGeneratorReplaceTwo.lo:  \
	spellchecker/suggestion/$(am__dirstamp) \
	spellchecker/suggestion/$(DEPDIR)/$(am__dirstamp)
spellchecker/suggestion/SuggestionGeneratorSoftHyphens.lo:  \
	spellchecker/suggestion/$(am__dirstamp) \
	spellchecker/suggestion/$(DEPDIR)/$(am__dirstamp)
spellchecker/suggestion/SuggestionGeneratorSplitWord.lo:  \
	spellchecker/suggestion/$(am__dirstamp) \
	spellchecker/suggestion/$(DEPDIR)/$(am__dirstamp)
spellchecker/suggestion/SuggestionGeneratorSwap.lo:  \
	spellchecker/suggestion/$(am__dirstamp) \
	spellchecker/suggestion/$(DEPDIR)/$(am__dirstamp)
spellchecker/suggestion/SuggestionGeneratorVowelChange.lo:  \
	spellchecker/suggestion/$(am__dirstamp) \
	spellchecker/suggestion/$(DEPDIR)/$(am__dirstamp)
spellchecker/suggestion/SuggestionStrategy.lo:  \
	spellchecker/suggestion/$(am__dirstamp) \
	spellchecker/suggestion/$(DEPDIR)/$(am__dirstamp)
spellchecker/suggestion/SuggestionStrategyOcr.lo:  \
	spellchecker/suggestion/$(am__dirstamp) \
	spellchecker/suggestion/$(DEPDIR)/$(am__dirstamp)
spellchecker/suggestion/SuggestionStrategyTyping.lo:  \
	spellchecker/suggestion/$(am__dirstamp) \
	spellchecker/suggestion/$(DEPDIR)/$(am__dirstamp)
utils/$(am__dirstamp):
	@$(MKDIR_P) utils
	@: > utils/$(am__dirstamp)
utils/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) utils/$(DEPDIR)
	@: > utils/$(DEPDIR)/$(am__dirstamp)
utils/utils.lo: utils/$(am__dirstamp) utils/$(DEPDIR)/$(am__dirstamp)
utils/StringUtils.lo: utils/$(am__dirstamp) \
	utils/$(DEPDIR)/$(am__dirstamp)
morphology/$(am__dirstamp):
	@$(MKDIR_P) morphology
	@: > morphology/$(am__dirstamp)
morphology/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) morphology/$(DEPDIR)
	@: > morphology/$(DEPDIR)/$(am__dirstamp)
morphology/interface.lo: morphology/$(am__dirstamp) \
	morphology/$(DEPDIR)/$(am__dirstamp)
morphology/Analysis.lo: morphology/$(am__dirstamp) \
	morphology/$(DEPDIR)/$(am__dirstamp)
morphology/Analyzer.lo: morphology/$(am__dirstamp) \
	morphology/$(DEPDIR)/$(am__dirstamp)
morphology/AnalyzerFactory.lo: morphology/$(am__dirstamp) \
	morphology/$(DEPDIR)/$(am__dirstamp)
morphology/NullAnalyzer.lo: morphology/$(am__dirstamp) \
	morphology/$(DEPDIR)/$(am__dirstamp)
setup/$(am__dirstamp):
	@$(MKDIR_P) setup
	@: > setup/$(am__dirstamp)
setup/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) setup/$(DEPDIR)
	@: > setup/$(DEPDIR)/$(am__dirstamp)
setup/setup.lo: setup/$(am__dirstamp) setup/$(DEPDIR)/$(am__dirstamp)
setup/Dictionary.lo: setup/$(am__dirstamp) \
	setup/$(DEPDIR)/$(am__dirstamp)
setup/BackendProperties.lo: setup/$(am__dirstamp) \
	setup/$(DEPDIR)/$(am__dirstamp)
setup/DictionaryFactory.lo: setup/$(am__dirstamp) \
	setup/$(DEPDIR)/$(am__dirstamp)
setup/DictionaryLoader.lo: setup/$(am__dirstamp) \
	setup/$(DEPDIR)/$(am__dirstamp)
setup/DictionaryException.lo: setup/$(am__dirstamp) \
	setup/$(DEPDIR)/$(am__dirstamp)
setup/interface.lo: setup/$(am__dirstamp) \
	setup/$(DEPDIR)/$(am__dirstamp)
setup/LanguageTag.lo: setup/$(am__dirstamp) \
	setup/$(DEPDIR)/$(am__dirstamp)
hyphenator/$(am__dirstamp):
	@$(MKDIR_P) hyphenator
	@: > hyphenator/$(am__dirstamp)
hyphenator/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) hyphenator/$(DEPDIR)
	@: > hyphenator/$(DEPDIR)/$(am__dirstamp)
hyphenator/interface.lo: hyphenator/$(am__dirstamp) \
	hyphenator/$(DEPDIR)/$(am__dirstamp)
hyphenator/AnalyzerToFinnishHyphenatorAdapter.lo:  \
	hyphenator/$(am__dirstamp) \
	hyphenator/$(DEPDIR)/$(am__dirstamp)
hyphenator/Hyphenator.lo: hyphenator/$(am__dirstamp) \
	hyphenator/$(DEPDIR)/$(am__dirstamp)
hyphenator/HyphenatorFactory.lo: hyphenator/$(am__dirstamp) \
	hyphenator/$(DEPDIR)/$(am__dirstamp)
character/$(am__dirstamp):
	@$(MKDIR_P) character
	@: > character/$(am__dirstamp)
character/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) character/$(DEPDIR)
	@: > character/$(DEPDIR)/$(am__dirstamp)
character/charset.lo: character/$(am__dirstamp) \
	character/$(DEPDIR)/$(am__dirstamp)
character/SimpleChar.lo: character/$(am__dirstamp) \
	character/$(DEPDIR)/$(am__dirstamp)
tokenizer/$(am__dirstamp):
	@$(MKDIR_P) tokenizer
	@: > tokenizer/$(am__dirstamp)
tokenizer/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) tokenizer/$(DEPDIR)
	@: > tokenizer/$(DEPDIR)/$(am__dirstamp)
tokenizer/interface.lo: tokenizer/$(am__dirstamp) \
	tokenizer/$(DEPDIR)/$(am__dirstamp)
tokenizer/Tokenizer.lo: tokenizer/$(am__dirstamp) \
	tokenizer/$(DEPDIR)/$(am__dirstamp)
sentence/$(am__dirstamp):
	@$(MKDIR_P) sentence
	@: > sentence/$(am__dirstamp)
sentence/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) sentence/$(DEPDIR)
	@: > sentence/$(DEPDIR)/$(am__dirstamp)
sentence/interface.lo: sentence/$(am__dirstamp) \
	sentence/$(DEPDIR)/$(am__dirstamp)
sentence/Sentence.lo: sentence/$(am__dirstamp) \
	sentence/$(DEPDIR)/$(am__dirstamp)
grammar/$(am__dirstamp):
	@$(MKDIR_P) grammar
	@: > grammar/$(am__dirstamp)
grammar/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) grammar/$(DEPDIR)
	@: > grammar/$(DEPDIR)/$(am__dirstamp)
grammar/interface.lo: grammar/$(am__dirstamp) \
	grammar/$(DEPDIR)/$(am__dirstamp)
grammar/FinnishRuleEngine/$(am__dirstamp):
	@$(MKDIR_P) grammar/FinnishRuleEngine
	@: > grammar/FinnishRuleEngine/$(am__dirstamp)
grammar/FinnishRuleEngine/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) grammar/FinnishRuleEngine/$(DEPDIR)
	@: > grammar/FinnishRuleEngine/$(DEPDIR)/$(am__dirstamp)
grammar/FinnishRuleEngine/checks.lo:  \
	grammar/FinnishRuleEngine/$(am__dirstamp) \
	grammar/FinnishRuleEngine/$(DEPDIR)/$(am__dirstamp)
grammar/error.lo: grammar/$(am__dirstamp) \
	grammar/$(DEPDIR)/$(am__dirstamp)
grammar/Analysis.lo: grammar/$(am__dirstamp) \
	grammar/$(DEPDIR)/$(am__dirstamp)
grammar/Sentence.lo: grammar/$(am__dirstamp) \
	grammar/$(DEPDIR)/$(am__dirstamp)
grammar/Paragraph.lo: grammar/$(am__dirstamp) \
	grammar/$(DEPDIR)/$(am__dirstamp)
grammar/CacheEntry.lo: grammar/$(am__dirstamp) \
	grammar/$(DEPDIR)/$(am__dirstamp)
grammar/GcCache.lo: grammar/$(am__dirstamp) \
	grammar/$(DEPDIR)/$(am__dirstamp)
grammar/VoikkoGrammarError.lo: grammar/$(am__dirstamp) \
	grammar/$(DEPDIR)/$(am__dirstamp)
grammar/NullGrammarChecker.lo: grammar/$(am__dirstamp) \
	grammar/$(DEPDIR)/$(am__dirstamp)
grammar/FinnishGrammarChecker.lo: grammar/$(am__dirstamp) \
	grammar/$(DEPDIR)/$(am__dirstamp)
grammar/GrammarChecker.lo: grammar/$(am__dirstamp) \
	grammar/$(DEPDIR)/$(am__dirstamp)
grammar/GrammarCheckerFactory.lo: grammar/$(am__dirstamp) \
	grammar/$(DEPDIR)/$(am__dirstamp)
grammar/FinnishAnalysis.lo: grammar/$(am__dirstamp) \
	grammar/$(DEPDIR)/$(am__dirstamp)
grammar/HfstAnalysis.lo: grammar/$(am__dirstamp) \
	grammar/$(DEPDIR)/$(am__dirstamp)
grammar/FinnishRuleEngine.lo: grammar/$(am__dirstamp) \
	grammar/$(DEPDIR)/$(am__dirstamp)
grammar/RuleEngine.lo: grammar/$(am__dirstamp) \
	grammar/$(DEPDIR)/$(am__dirstamp)
grammar/FinnishRuleEngine/CapitalizationCheck.lo:  \
	grammar/FinnishRuleEngine/$(am__dirstamp) \
	grammar/FinnishRuleEngine/$(DEPDIR)/$(am__dirstamp)
grammar/FinnishRuleEngine/CompoundVerbCheck.lo:  \
	grammar/FinnishRuleEngine/$(am__dirstamp) \
	grammar/FinnishRuleEngine/$(DEPDIR)/$(am__dirstamp)
grammar/FinnishRuleEngine/MissingVerbCheck.lo:  \
	grammar/FinnishRuleEngine/$(am__dirstamp) \
	grammar/FinnishRuleEngine/$(DEPDIR)/$(am__dirstamp)
grammar/FinnishRuleEngine/NegativeVerbCheck.lo:  \
	grammar/FinnishRuleEngine/$(am__dirstamp) \
	grammar/FinnishRuleEngine/$(DEPDIR)/$(am__dirstamp)
grammar/FinnishRuleEngine/ParagraphCheck.lo:  \
	grammar/FinnishRuleEngine/$(am__dirstamp) \
	grammar/FinnishRuleEngine/$(DEPDIR)/$(am__dirstamp)
grammar/FinnishRuleEngine/SentenceCheck.lo:  \
	grammar/FinnishRuleEngine/$(am__dirstamp) \
	grammar/FinnishRuleEngine/$(DEPDIR)/$(am__dirstamp)
grammar/FinnishRuleEngine/SidesanaCheck.lo:  \
	grammar/FinnishRuleEngine/$(am__dirstamp) \
	grammar/FinnishRuleEngine/$(DEPDIR)/$(am__dirstamp)
grammar/FinnishRuleEngine/RelativePronounCheck.lo:  \
	grammar/FinnishRuleEngine/$(am__dirstamp) \
	grammar/FinnishRuleEngine/$(DEPDIR)/$(am__dirstamp)
compatibility/$(am__dirstamp):
	@$(MKDIR_P) compatibility
	@: > compatibility/$(am__dirstamp)
compatibility/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) compatibility/$(DEPDIR)
	@: > compatibility/$(DEPDIR)/$(am__dirstamp)
compatibility/interface.lo: compatibility/$(am__dirstamp) \
	compatibility/$(DEPDIR)/$(am__dirstamp)
morphology/VfstAnalyzer.lo: morphology/$(am__dirstamp) \
	morphology/$(DEPDIR)/$(am__dirstamp)
morphology/FinnishVfstAnalyzer.lo: morphology/$(am__dirstamp) \
	morphology/$(DEPDIR)/$(am__dirstamp)
spellchecker/VfstSpeller.lo: spellchecker/$(am__dirstamp) \
	spellchecker/$(DEPDIR)/$(am__dirstamp)
spellchecker/VfstSuggestion.lo: spellchecker/$(am__dirstamp) \
	spellchecker/$(DEPDIR)/$(am__dirstamp)
setup/V5DictionaryLoader.lo: setup/$(am__dirstamp) \
	setup/$(DEPDIR)/$(am__dirstamp)
grammar/FinnishRuleEngine/VfstAutocorrectCheck.lo:  \
	grammar/FinnishRuleEngine/$(am__dirstamp) \
	grammar/FinnishRuleEngine/$(DEPDIR)/$(am__dirstamp)
morphology/HfstAnalyzer.lo: morphology/$(am__dirstamp) \
	morphology/$(DEPDIR)/$(am__dirstamp)
spellchecker/HfstSpeller.lo: spellchecker/$(am__dirstamp) \
	spellchecker/$(DEPDIR)/$(am__dirstamp)
spellchecker/HfstSuggestion.lo: spellchecker/$(am__dirstamp) \
	spellchecker/$(DEPDIR)/$(am__dirstamp)
hyphenator/HfstHyphenator.lo: hyphenator/$(am__dirstamp) \
	hyphenator/$(DEPDIR)/$(am__dirstamp)
setup/V3DictionaryLoader.lo: setup/$(am__dirstamp) \
	setup/$(DEPDIR)/$(am__dirstamp)
morphology/LttoolboxAnalyzer.lo: morphology/$(am__dirstamp) \
	morphology/$(DEPDIR)/$(am__dirstamp)
grammar/CgRuleEngine.lo: grammar/$(am__dirstamp) \
	grammar/$(DEPDIR)/$(am__dirstamp)
setup/V4DictionaryLoader.lo: setup/$(am__dirstamp) \
	setup/$(DEPDIR)/$(am__dirstamp)
grammar/CgGrammarChecker.lo: grammar/$(am__dirstamp) \
	grammar/$(DEPDIR)/$(am__dirstamp)

libvoikko.la: $(libvoikko_la_OBJECTS) $(libvoikko_la_DEPENDENCIES) $(EXTRA_libvoikko_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(libvoikko_la_LINK) -rpath $(libdir) $(libvoikko_la_OBJECTS) $(libvoikko_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f character/*.$(OBJEXT)
	-rm -f character/*.lo
	-rm -f compatibility/*.$(OBJEXT)
	-rm -f compatibility/*.lo
	-rm -f fst/*.$(OBJEXT)
	-rm -f fst/*.lo
	-rm -f grammar/*.$(OBJEXT)
	-rm -f grammar/*.lo
	-rm -f grammar/FinnishRuleEngine/*.$(OBJEXT)
	-rm -f grammar/FinnishRuleEngine/*.lo
	-rm -f hyphenator/*.$(OBJEXT)
	-rm -f hyphenator/*.lo
	-rm -f morphology/*.$(OBJEXT)
	-rm -f morphology/*.lo
	-rm -f sentence/*.$(OBJEXT)
	-rm -f sentence/*.lo
	-rm -f setup/*.$(OBJEXT)
	-rm -f setup/*.lo
	-rm -f spellchecker/*.$(OBJEXT)
	-rm -f spellchecker/*.lo
	-rm -f spellchecker/suggestion/*.$(OBJEXT)
	-rm -f spellchecker/suggestion/*.lo
	-rm -f tokenizer/*.$(OBJEXT)
	-rm -f tokenizer/*.lo
	-rm -f utils/*.$(OBJEXT)
	-rm -f utils/*.lo

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@character/$(DEPDIR)/SimpleChar.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@character/$(DEPDIR)/charset.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@compatibility/$(DEPDIR)/interface.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@fst/$(DEPDIR)/Configuration.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@fst/$(DEPDIR)/Transducer.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@fst/$(DEPDIR)/UnweightedTransducer.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@fst/$(DEPDIR)/WeightedConfiguration.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@fst/$(DEPDIR)/WeightedTransducer.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@grammar/$(DEPDIR)/Analysis.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@grammar/$(DEPDIR)/CacheEntry.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@grammar/$(DEPDIR)/CgGrammarChecker.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@grammar/$(DEPDIR)/CgRuleEngine.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@grammar/$(DEPDIR)/FinnishAnalysis.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@grammar/$(DEPDIR)/FinnishGrammarChecker.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@grammar/$(DEPDIR)/FinnishRuleEngine.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@grammar/$(DEPDIR)/GcCache.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@grammar/$(DEPDIR)/GrammarChecker.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@grammar/$(DEPDIR)/GrammarCheckerFactory.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@grammar/$(DEPDIR)/HfstAnalysis.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@grammar/$(DEPDIR)/NullGrammarChecker.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@grammar/$(DEPDIR)/Paragraph.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@grammar/$(DEPDIR)/RuleEngine.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@grammar/$(DEPDIR)/Sentence.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@grammar/$(DEPDIR)/VoikkoGrammarError.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@grammar/$(DEPDIR)/error.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@grammar/$(DEPDIR)/interface.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@grammar/FinnishRuleEngine/$(DEPDIR)/CapitalizationCheck.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@grammar/FinnishRuleEngine/$(DEPDIR)/CompoundVerbCheck.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@grammar/FinnishRuleEngine/$(DEPDIR)/MissingVerbCheck.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@grammar/FinnishRuleEngine/$(DEPDIR)/NegativeVerbCheck.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@grammar/FinnishRuleEngine/$(DEPDIR)/ParagraphCheck.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@grammar/FinnishRuleEngine/$(DEPDIR)/RelativePronounCheck.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@grammar/FinnishRuleEngine/$(DEPDIR)/SentenceCheck.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@grammar/FinnishRuleEngine/$(DEPDIR)/SidesanaCheck.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@grammar/FinnishRuleEngine/$(DEPDIR)/VfstAutocorrectCheck.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@grammar/FinnishRuleEngine/$(DEPDIR)/checks.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@hyphenator/$(DEPDIR)/AnalyzerToFinnishHyphenatorAdapter.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@hyphenator/$(DEPDIR)/HfstHyphenator.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@hyphenator/$(DEPDIR)/Hyphenator.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@hyphenator/$(DEPDIR)/HyphenatorFactory.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@hyphenator/$(DEPDIR)/interface.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@morphology/$(DEPDIR)/Analysis.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@morphology/$(DEPDIR)/Analyzer.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@morphology/$(DEPDIR)/AnalyzerFactory.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@morphology/$(DEPDIR)/FinnishVfstAnalyzer.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@morphology/$(DEPDIR)/HfstAnalyzer.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@morphology/$(DEPDIR)/LttoolboxAnalyzer.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@morphology/$(DEPDIR)/NullAnalyzer.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@morphology/$(DEPDIR)/VfstAnalyzer.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@morphology/$(DEPDIR)/interface.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@sentence/$(DEPDIR)/Sentence.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@sentence/$(DEPDIR)/interface.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@setup/$(DEPDIR)/BackendProperties.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@setup/$(DEPDIR)/Dictionary.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@setup/$(DEPDIR)/DictionaryException.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@setup/$(DEPDIR)/DictionaryFactory.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@setup/$(DEPDIR)/DictionaryLoader.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@setup/$(DEPDIR)/LanguageTag.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@setup/$(DEPDIR)/V3DictionaryLoader.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@setup/$(DEPDIR)/V4DictionaryLoader.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@setup/$(DEPDIR)/V5DictionaryLoader.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@setup/$(DEPDIR)/interface.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@setup/$(DEPDIR)/setup.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@spellchecker/$(DEPDIR)/AnalyzerToSpellerAdapter.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@spellchecker/$(DEPDIR)/FinnishSpellerTweaksWrapper.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@spellchecker/$(DEPDIR)/FixedResultSpeller.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@spellchecker/$(DEPDIR)/HfstSpeller.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@spellchecker/$(DEPDIR)/HfstSuggestion.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@spellchecker/$(DEPDIR)/SpellUtils.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@spellchecker/$(DEPDIR)/SpellWithPriority.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@spellchecker/$(DEPDIR)/Speller.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@spellchecker/$(DEPDIR)/SpellerCache.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@spellchecker/$(DEPDIR)/SpellerFactory.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@spellchecker/$(DEPDIR)/VfstSpeller.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@spellchecker/$(DEPDIR)/VfstSuggestion.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@spellchecker/$(DEPDIR)/spell.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@spellchecker/$(DEPDIR)/suggestions.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@spellchecker/suggestion/$(DEPDIR)/Suggestion.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@spellchecker/suggestion/$(DEPDIR)/SuggestionGeneratorCaseChange.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@spellchecker/suggestion/$(DEPDIR)/SuggestionGeneratorDeleteTwo.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@spellchecker/suggestion/$(DEPDIR)/SuggestionGeneratorDeletion.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@spellchecker/suggestion/$(DEPDIR)/SuggestionGeneratorFactory.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@spellchecker/suggestion/$(DEPDIR)/SuggestionGeneratorInsertSpecial.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@spellchecker/suggestion/$(DEPDIR)/SuggestionGeneratorInsertion.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@spellchecker/suggestion/$(DEPDIR)/SuggestionGeneratorMultiReplacement.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@spellchecker/suggestion/$(DEPDIR)/SuggestionGeneratorNull.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@spellchecker/suggestion/$(DEPDIR)/SuggestionGeneratorReplaceTwo.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@spellchecker/suggestion/$(DEPDIR)/SuggestionGeneratorReplacement.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@spellchecker/suggestion/$(DEPDIR)/SuggestionGeneratorSoftHyphens.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@spellchecker/suggestion/$(DEPDIR)/SuggestionGeneratorSplitWord.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@spellchecker/suggestion/$(DEPDIR)/SuggestionGeneratorSwap.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@spellchecker/suggestion/$(DEPDIR)/SuggestionGeneratorVowelChange.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@spellchecker/suggestion/$(DEPDIR)/SuggestionStatus.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@spellchecker/suggestion/$(DEPDIR)/SuggestionStrategy.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@spellchecker/suggestion/$(DEPDIR)/SuggestionStrategyOcr.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@spellchecker/suggestion/$(DEPDIR)/SuggestionStrategyTyping.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@tokenizer/$(DEPDIR)/Tokenizer.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@tokenizer/$(DEPDIR)/interface.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@utils/$(DEPDIR)/StringUtils.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@utils/$(DEPDIR)/utils.Plo@am__quote@ # am--include-marker

$(am__depfiles_remade):
	@$(MKDIR_P) $(@D)
	@echo '# dummy' >$@-t && $(am__mv) $@-t $@

am--depfiles: $(am__depfiles_remade)

.cpp.o:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
	-rm -rf character/.libs character/_libs
	-rm -rf compatibility/.libs compatibility/_libs
	-rm -rf fst/.libs fst/_libs
	-rm -rf grammar/.libs grammar/_libs
	-rm -rf grammar/FinnishRuleEngine/.libs grammar/FinnishRuleEngine/_libs
	-rm -rf hyphenator/.libs hyphenator/_libs
	-rm -rf morphology/.libs morphology/_libs
	-rm -rf sentence/.libs sentence/_libs
	-rm -rf setup/.libs setup/_libs
	-rm -rf spellchecker/.libs spellchecker/_libs
	-rm -rf spellchecker/suggestion/.libs spellchecker/suggestion/_libs
	-rm -rf tokenizer/.libs tokenizer/_libs
	-rm -rf utils/.libs utils/_libs
install-pkgconfigDATA: $(pkgconfig_DATA)
	@$(NORMAL_INSTALL)
	@list='$(pkgconfig_DATA)'; test -n "$(pkgconfigdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pkgconfigdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pkgconfigdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(pkgconfigdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(pkgconfigdir)" || exit $$?; \
	done

uninstall-pkgconfigDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(pkgconfig_DATA)'; test -n "$(pkgconfigdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(pkgconfigdir)'; $(am__uninstall_files_from_dir)
install-pkgincludeHEADERS: $(pkginclude_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(pkginclude_HEADERS)'; test -n "$(pkgincludedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pkgincludedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pkgincludedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(pkgincludedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(pkgincludedir)" || exit $$?; \
	done

uninstall-pkgincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(pkginclude_HEADERS)'; test -n "$(pkgincludedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(pkgincludedir)'; $(am__uninstall_files_from_dir)

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(DATA) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(pkgconfigdir)" "$(DESTDIR)$(pkgincludedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f character/$(DEPDIR)/$(am__dirstamp)
	-rm -f character/$(am__dirstamp)
	-rm -f compatibility/$(DEPDIR)/$(am__dirstamp)
	-rm -f compatibility/$(am__dirstamp)
	-rm -f fst/$(DEPDIR)/$(am__dirstamp)
	-rm -f fst/$(am__dirstamp)
	-rm -f grammar/$(DEPDIR)/$(am__dirstamp)
	-rm -f grammar/$(am__dirstamp)
	-rm -f grammar/FinnishRuleEngine/$(DEPDIR)/$(am__dirstamp)
	-rm -f grammar/FinnishRuleEngine/$(am__dirstamp)
	-rm -f hyphenator/$(DEPDIR)/$(am__dirstamp)
	-rm -f hyphenator/$(am__dirstamp)
	-rm -f morphology/$(DEPDIR)/$(am__dirstamp)
	-rm -f morphology/$(am__dirstamp)
	-rm -f sentence/$(DEPDIR)/$(am__dirstamp)
	-rm -f sentence/$(am__dirstamp)
	-rm -f setup/$(DEPDIR)/$(am__dirstamp)
	-rm -f setup/$(am__dirstamp)
	-rm -f spellchecker/$(DEPDIR)/$(am__dirstamp)
	-rm -f spellchecker/$(am__dirstamp)
	-rm -f spellchecker/suggestion/$(DEPDIR)/$(am__dirstamp)
	-rm -f spellchecker/suggestion/$(am__dirstamp)
	-rm -f tokenizer/$(DEPDIR)/$(am__dirstamp)
	-rm -f tokenizer/$(am__dirstamp)
	-rm -f utils/$(DEPDIR)/$(am__dirstamp)
	-rm -f utils/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
	mostlyclean-am

distclean: distclean-am
		-rm -f character/$(DEPDIR)/SimpleChar.Plo
	-rm -f character/$(DEPDIR)/charset.Plo
	-rm -f compatibility/$(DEPDIR)/interface.Plo
	-rm -f fst/$(DEPDIR)/Configuration.Plo
	-rm -f fst/$(DEPDIR)/Transducer.Plo
	-rm -f fst/$(DEPDIR)/UnweightedTransducer.Plo
	-rm -f fst/$(DEPDIR)/WeightedConfiguration.Plo
	-rm -f fst/$(DEPDIR)/WeightedTransducer.Plo
	-rm -f grammar/$(DEPDIR)/Analysis.Plo
	-rm -f grammar/$(DEPDIR)/CacheEntry.Plo
	-rm -f grammar/$(DEPDIR)/CgGrammarChecker.Plo
	-rm -f grammar/$(DEPDIR)/CgRuleEngine.Plo
	-rm -f grammar/$(DEPDIR)/FinnishAnalysis.Plo
	-rm -f grammar/$(DEPDIR)/FinnishGrammarChecker.Plo
	-rm -f grammar/$(DEPDIR)/FinnishRuleEngine.Plo
	-rm -f grammar/$(DEPDIR)/GcCache.Plo
	-rm -f grammar/$(DEPDIR)/GrammarChecker.Plo
	-rm -f grammar/$(DEPDIR)/GrammarCheckerFactory.Plo
	-rm -f grammar/$(DEPDIR)/HfstAnalysis.Plo
	-rm -f grammar/$(DEPDIR)/NullGrammarChecker.Plo
	-rm -f grammar/$(DEPDIR)/Paragraph.Plo
	-rm -f grammar/$(DEPDIR)/RuleEngine.Plo
	-rm -f grammar/$(DEPDIR)/Sentence.Plo
	-rm -f grammar/$(DEPDIR)/VoikkoGrammarError.Plo
	-rm -f grammar/$(DEPDIR)/error.Plo
	-rm -f grammar/$(DEPDIR)/interface.Plo
	-rm -f grammar/FinnishRuleEngine/$(DEPDIR)/CapitalizationCheck.Plo
	-rm -f grammar/FinnishRuleEngine/$(DEPDIR)/CompoundVerbCheck.Plo
	-rm -f grammar/FinnishRuleEngine/$(DEPDIR)/MissingVerbCheck.Plo
	-rm -f grammar/FinnishRuleEngine/$(DEPDIR)/NegativeVerbCheck.Plo
	-rm -f grammar/FinnishRuleEngine/$(DEPDIR)/ParagraphCheck.Plo
	-rm -f grammar/FinnishRuleEngine/$(DEPDIR)/RelativePronounCheck.Plo
	-rm -f grammar/FinnishRuleEngine/$(DEPDIR)/SentenceCheck.Plo
	-rm -f grammar/FinnishRuleEngine/$(DEPDIR)/SidesanaCheck.Plo
	-rm -f grammar/FinnishRuleEngine/$(DEPDIR)/VfstAutocorrectCheck.Plo
	-rm -f grammar/FinnishRuleEngine/$(DEPDIR)/checks.Plo
	-rm -f hyphenator/$(DEPDIR)/AnalyzerToFinnishHyphenatorAdapter.Plo
	-rm -f hyphenator/$(DEPDIR)/HfstHyphenator.Plo
	-rm -f hyphenator/$(DEPDIR)/Hyphenator.Plo
	-rm -f hyphenator/$(DEPDIR)/HyphenatorFactory.Plo
	-rm -f hyphenator/$(DEPDIR)/interface.Plo
	-rm -f morphology/$(DEPDIR)/Analysis.Plo
	-rm -f morphology/$(DEPDIR)/Analyzer.Plo
	-rm -f morphology/$(DEPDIR)/AnalyzerFactory.Plo
	-rm -f morphology/$(DEPDIR)/FinnishVfstAnalyzer.Plo
	-rm -f morphology/$(DEPDIR)/HfstAnalyzer.Plo
	-rm -f morphology/$(DEPDIR)/LttoolboxAnalyzer.Plo
	-rm -f morphology/$(DEPDIR)/NullAnalyzer.Plo
	-rm -f morphology/$(DEPDIR)/VfstAnalyzer.Plo
	-rm -f morphology/$(DEPDIR)/interface.Plo
	-rm -f sentence/$(DEPDIR)/Sentence.Plo
	-rm -f sentence/$(DEPDIR)/interface.Plo
	-rm -f setup/$(DEPDIR)/BackendProperties.Plo
	-rm -f setup/$(DEPDIR)/Dictionary.Plo
	-rm -f setup/$(DEPDIR)/DictionaryException.Plo
	-rm -f setup/$(DEPDIR)/DictionaryFactory.Plo
	-rm -f setup/$(DEPDIR)/DictionaryLoader.Plo
	-rm -f setup/$(DEPDIR)/LanguageTag.Plo
	-rm -f setup/$(DEPDIR)/V3DictionaryLoader.Plo
	-rm -f setup/$(DEPDIR)/V4DictionaryLoader.Plo
	-rm -f setup/$(DEPDIR)/V5DictionaryLoader.Plo
	-rm -f setup/$(DEPDIR)/interface.Plo
	-rm -f setup/$(DEPDIR)/setup.Plo
	-rm -f spellchecker/$(DEPDIR)/AnalyzerToSpellerAdapter.Plo
	-rm -f spellchecker/$(DEPDIR)/FinnishSpellerTweaksWrapper.Plo
	-rm -f spellchecker/$(DEPDIR)/FixedResultSpeller.Plo
	-rm -f spellchecker/$(DEPDIR)/HfstSpeller.Plo
	-rm -f spellchecker/$(DEPDIR)/HfstSuggestion.Plo
	-rm -f spellchecker/$(DEPDIR)/SpellUtils.Plo
	-rm -f spellchecker/$(DEPDIR)/SpellWithPriority.Plo
	-rm -f spellchecker/$(DEPDIR)/Speller.Plo
	-rm -f spellchecker/$(DEPDIR)/SpellerCache.Plo
	-rm -f spellchecker/$(DEPDIR)/SpellerFactory.Plo
	-rm -f spellchecker/$(DEPDIR)/VfstSpeller.Plo
	-rm -f spellchecker/$(DEPDIR)/VfstSuggestion.Plo
	-rm -f spellchecker/$(DEPDIR)/spell.Plo
	-rm -f spellchecker/$(DEPDIR)/suggestions.Plo
	-rm -f spellchecker/suggestion/$(DEPDIR)/Suggestion.Plo
	-rm -f spellchecker/suggestion/$(DEPDIR)/SuggestionGeneratorCaseChange.Plo
	-rm -f spellchecker/suggestion/$(DEPDIR)/SuggestionGeneratorDeleteTwo.Plo
	-rm -f spellchecker/suggestion/$(DEPDIR)/SuggestionGeneratorDeletion.Plo
	-rm -f spellchecker/suggestion/$(DEPDIR)/SuggestionGeneratorFactory.Plo
	-rm -f spellchecker/suggestion/$(DEPDIR)/SuggestionGeneratorInsertSpecial.Plo
	-rm -f spellchecker/suggestion/$(DEPDIR)/SuggestionGeneratorInsertion.Plo
	-rm -f spellchecker/suggestion/$(DEPDIR)/SuggestionGeneratorMultiReplacement.Plo
	-rm -f spellchecker/suggestion/$(DEPDIR)/SuggestionGeneratorNull.Plo
	-rm -f spellchecker/suggestion/$(DEPDIR)/SuggestionGeneratorReplaceTwo.Plo
	-rm -f spellchecker/suggestion/$(DEPDIR)/SuggestionGeneratorReplacement.Plo
	-rm -f spellchecker/suggestion/$(DEPDIR)/SuggestionGeneratorSoftHyphens.Plo
	-rm -f spellchecker/suggestion/$(DEPDIR)/SuggestionGeneratorSplitWord.Plo
	-rm -f spellchecker/suggestion/$(DEPDIR)/SuggestionGeneratorSwap.Plo
	-rm -f spellchecker/suggestion/$(DEPDIR)/SuggestionGeneratorVowelChange.Plo
	-rm -f spellchecker/suggestion/$(DEPDIR)/SuggestionStatus.Plo
	-rm -f spellchecker/suggestion/$(DEPDIR)/SuggestionStrategy.Plo
	-rm -f spellchecker/suggestion/$(DEPDIR)/SuggestionStrategyOcr.Plo
	-rm -f spellchecker/suggestion/$(DEPDIR)/SuggestionStrategyTyping.Plo
	-rm -f tokenizer/$(DEPDIR)/Tokenizer.Plo
	-rm -f tokenizer/$(DEPDIR)/interface.Plo
	-rm -f utils/$(DEPDIR)/StringUtils.Plo
	-rm -f utils/$(DEPDIR)/utils.Plo
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-pkgconfigDATA install-pkgincludeHEADERS

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-libLTLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
		-rm -f character/$(DEPDIR)/SimpleChar.Plo
	-rm -f character/$(DEPDIR)/charset.Plo
	-rm -f compatibility/$(DEPDIR)/interface.Plo
	-rm -f fst/$(DEPDIR)/Configuration.Plo
	-rm -f fst/$(DEPDIR)/Transducer.Plo
	-rm -f fst/$(DEPDIR)/UnweightedTransducer.Plo
	-rm -f fst/$(DEPDIR)/WeightedConfiguration.Plo
	-rm -f fst/$(DEPDIR)/WeightedTransducer.Plo
	-rm -f grammar/$(DEPDIR)/Analysis.Plo
	-rm -f grammar/$(DEPDIR)/CacheEntry.Plo
	-rm -f grammar/$(DEPDIR)/CgGrammarChecker.Plo
	-rm -f grammar/$(DEPDIR)/CgRuleEngine.Plo
	-rm -f grammar/$(DEPDIR)/FinnishAnalysis.Plo
	-rm -f grammar/$(DEPDIR)/FinnishGrammarChecker.Plo
	-rm -f grammar/$(DEPDIR)/FinnishRuleEngine.Plo
	-rm -f grammar/$(DEPDIR)/GcCache.Plo
	-rm -f grammar/$(DEPDIR)/GrammarChecker.Plo
	-rm -f grammar/$(DEPDIR)/GrammarCheckerFactory.Plo
	-rm -f grammar/$(DEPDIR)/HfstAnalysis.Plo
	-rm -f grammar/$(DEPDIR)/NullGrammarChecker.Plo
	-rm -f grammar/$(DEPDIR)/Paragraph.Plo
	-rm -f grammar/$(DEPDIR)/RuleEngine.Plo
	-rm -f grammar/$(DEPDIR)/Sentence.Plo
	-rm -f grammar/$(DEPDIR)/VoikkoGrammarError.Plo
	-rm -f grammar/$(DEPDIR)/error.Plo
	-rm -f grammar/$(DEPDIR)/interface.Plo
	-rm -f grammar/FinnishRuleEngine/$(DEPDIR)/CapitalizationCheck.Plo
	-rm -f grammar/FinnishRuleEngine/$(DEPDIR)/CompoundVerbCheck.Plo
	-rm -f grammar/FinnishRuleEngine/$(DEPDIR)/MissingVerbCheck.Plo
	-rm -f grammar/FinnishRuleEngine/$(DEPDIR)/NegativeVerbCheck.Plo
	-rm -f grammar/FinnishRuleEngine/$(DEPDIR)/ParagraphCheck.Plo
	-rm -f grammar/FinnishRuleEngine/$(DEPDIR)/RelativePronounCheck.Plo
	-rm -f grammar/FinnishRuleEngine/$(DEPDIR)/SentenceCheck.Plo
	-rm -f grammar/FinnishRuleEngine/$(DEPDIR)/SidesanaCheck.Plo
	-rm -f grammar/FinnishRuleEngine/$(DEPDIR)/VfstAutocorrectCheck.Plo
	-rm -f grammar/FinnishRuleEngine/$(DEPDIR)/checks.Plo
	-rm -f hyphenator/$(DEPDIR)/AnalyzerToFinnishHyphenatorAdapter.Plo
	-rm -f hyphenator/$(DEPDIR)/HfstHyphenator.Plo
	-rm -f hyphenator/$(DEPDIR)/Hyphenator.Plo
	-rm -f hyphenator/$(DEPDIR)/HyphenatorFactory.Plo
	-rm -f hyphenator/$(DEPDIR)/interface.Plo
	-rm -f morphology/$(DEPDIR)/Analysis.Plo
	-rm -f morphology/$(DEPDIR)/Analyzer.Plo
	-rm -f morphology/$(DEPDIR)/AnalyzerFactory.Plo
	-rm -f morphology/$(DEPDIR)/FinnishVfstAnalyzer.Plo
	-rm -f morphology/$(DEPDIR)/HfstAnalyzer.Plo
	-rm -f morphology/$(DEPDIR)/LttoolboxAnalyzer.Plo
	-rm -f morphology/$(DEPDIR)/NullAnalyzer.Plo
	-rm -f morphology/$(DEPDIR)/VfstAnalyzer.Plo
	-rm -f morphology/$(DEPDIR)/interface.Plo
	-rm -f sentence/$(DEPDIR)/Sentence.Plo
	-rm -f sentence/$(DEPDIR)/interface.Plo
	-rm -f setup/$(DEPDIR)/BackendProperties.Plo
	-rm -f setup/$(DEPDIR)/Dictionary.Plo
	-rm -f setup/$(DEPDIR)/DictionaryException.Plo
	-rm -f setup/$(DEPDIR)/DictionaryFactory.Plo
	-rm -f setup/$(DEPDIR)/DictionaryLoader.Plo
	-rm -f setup/$(DEPDIR)/LanguageTag.Plo
	-rm -f setup/$(DEPDIR)/V3DictionaryLoader.Plo
	-rm -f setup/$(DEPDIR)/V4DictionaryLoader.Plo
	-rm -f setup/$(DEPDIR)/V5DictionaryLoader.Plo
	-rm -f setup/$(DEPDIR)/interface.Plo
	-rm -f setup/$(DEPDIR)/setup.Plo
	-rm -f spellchecker/$(DEPDIR)/AnalyzerToSpellerAdapter.Plo
	-rm -f spellchecker/$(DEPDIR)/FinnishSpellerTweaksWrapper.Plo
	-rm -f spellchecker/$(DEPDIR)/FixedResultSpeller.Plo
	-rm -f spellchecker/$(DEPDIR)/HfstSpeller.Plo
	-rm -f spellchecker/$(DEPDIR)/HfstSuggestion.Plo
	-rm -f spellchecker/$(DEPDIR)/SpellUtils.Plo
	-rm -f spellchecker/$(DEPDIR)/SpellWithPriority.Plo
	-rm -f spellchecker/$(DEPDIR)/Speller.Plo
	-rm -f spellchecker/$(DEPDIR)/SpellerCache.Plo
	-rm -f spellchecker/$(DEPDIR)/SpellerFactory.Plo
	-rm -f spellchecker/$(DEPDIR)/VfstSpeller.Plo
	-rm -f spellchecker/$(DEPDIR)/VfstSuggestion.Plo
	-rm -f spellchecker/$(DEPDIR)/spell.Plo
	-rm -f spellchecker/$(DEPDIR)/suggestions.Plo
	-rm -f spellchecker/suggestion/$(DEPDIR)/Suggestion.Plo
	-rm -f spellchecker/suggestion/$(DEPDIR)/SuggestionGeneratorCaseChange.Plo
	-rm -f spellchecker/suggestion/$(DEPDIR)/SuggestionGeneratorDeleteTwo.Plo
	-rm -f spellchecker/suggestion/$(DEPDIR)/SuggestionGeneratorDeletion.Plo
	-rm -f spellchecker/suggestion/$(DEPDIR)/SuggestionGeneratorFactory.Plo
	-rm -f spellchecker/suggestion/$(DEPDIR)/SuggestionGeneratorInsertSpecial.Plo
	-rm -f spellchecker/suggestion/$(DEPDIR)/SuggestionGeneratorInsertion.Plo
	-rm -f spellchecker/suggestion/$(DEPDIR)/SuggestionGeneratorMultiReplacement.Plo
	-rm -f spellchecker/suggestion/$(DEPDIR)/SuggestionGeneratorNull.Plo
	-rm -f spellchecker/suggestion/$(DEPDIR)/SuggestionGeneratorReplaceTwo.Plo
	-rm -f spellchecker/suggestion/$(DEPDIR)/SuggestionGeneratorReplacement.Plo
	-rm -f spellchecker/suggestion/$(DEPDIR)/SuggestionGeneratorSoftHyphens.Plo
	-rm -f spellchecker/suggestion/$(DEPDIR)/SuggestionGeneratorSplitWord.Plo
	-rm -f spellchecker/suggestion/$(DEPDIR)/SuggestionGeneratorSwap.Plo
	-rm -f spellchecker/suggestion/$(DEPDIR)/SuggestionGeneratorVowelChange.Plo
	-rm -f spellchecker/suggestion/$(DEPDIR)/SuggestionStatus.Plo
	-rm -f spellchecker/suggestion/$(DEPDIR)/SuggestionStrategy.Plo
	-rm -f spellchecker/suggestion/$(DEPDIR)/SuggestionStrategyOcr.Plo
	-rm -f spellchecker/suggestion/$(DEPDIR)/SuggestionStrategyTyping.Plo
	-rm -f tokenizer/$(DEPDIR)/Tokenizer.Plo
	-rm -f tokenizer/$(DEPDIR)/interface.Plo
	-rm -f utils/$(DEPDIR)/StringUtils.Plo
	-rm -f utils/$(DEPDIR)/utils.Plo
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-libLTLIBRARIES uninstall-pkgconfigDATA \
	uninstall-pkgincludeHEADERS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am am--depfiles check check-am clean \
	clean-generic clean-libLTLIBRARIES clean-libtool cscopelist-am \
	ctags ctags-am distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-libLTLIBRARIES install-man install-pdf \
	install-pdf-am install-pkgconfigDATA install-pkgincludeHEADERS \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am uninstall-libLTLIBRARIES \
	uninstall-pkgconfigDATA uninstall-pkgincludeHEADERS

.PRECIOUS: Makefile


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
